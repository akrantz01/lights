name: Pulumi
on:
  push:
    branches:
      - main

jobs:
  update:
    name: Update
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
          cache: yarn
          cache-dependency-path: setup/yarn.lock
      - run: yarn install
        working-directory: setup
      - uses: pulumi/actions@v3
        with:
          command: up
          stack-name: dev
          work-dir: setup
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

  build-api:
    name: Build API
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - arm64
          - amd64
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17.5'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-lights-api-${{ matrix.arch }}-${{ hashFiles('**/go.sum') }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-lights-api-${{ matrix.arch }}-${{ hashFiles('**/go.sum') }}
            ${{ runner.os }}-lights-api-${{ matrix.arch }}
            ${{ runner.os }}-lights-api
      - run: GOARCH=${{ matrix.arch }} go build -o ./lights-api.linux-${{ matrix.arch }}
        working-directory: api
      - uses: actions/upload-artifact@v2
        with:
          name: lights-api.linux-${{ matrix.arch }}
          path: ${{ github.workspace }}/api/lights-api.linux-${{ matrix.arch }}

  build-controller:
    name: Build Controller
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace}}/.venv
            ~/.local/bin
          key: ${{ runner.os }}-lights-controller-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-lights-controller-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
            ${{ runner.os }}-lights-controller-${{ matrix.python-version }}
            ${{ runner.os }}-lights-controller
      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -
      - run: poetry install --no-dev
      - run: poetry build
      - uses: actions/upload-artifact@v2
        with:
          name: lights-controller.py${{ matrix.python-version }}.whl
          path: ${{ github.workspace }}/dist/lights-*.whl
